services:
  broker:
    image: confluentinc/cp-kafka:7.6.1
    container_name: broker
    ports: ["9092:9092", "19092:19092"]
    networks:
      - flink-kafka-network
    environment:
      CLUSTER_ID: "PdgfYfujQqGOes577BiGcA"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      # FIXED: Added EXTERNAL listener for host access
      KAFKA_LISTENERS: "EXTERNAL://0.0.0.0:19092,PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092,CONTROLLER://0.0.0.0:29093"
      # FIXED: Advertise localhost for EXTERNAL, broker for internal
      KAFKA_ADVERTISED_LISTENERS: "EXTERNAL://localhost:19092,PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT_INTERNAL"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 25s

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    container_name: schema-registry
    networks:
      - flink-kafka-network
    depends_on:
      broker:
        condition: service_healthy
    ports: ["8081:8081"]
    environment:
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29092"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8081/subjects >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.6.1
    container_name: control-center
    networks:
      - flink-kafka-network
    depends_on:
      broker:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    ports: ["9021:9021"]
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29092"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: "1"
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: "1"
      CONTROL_CENTER_COMMAND_TOPIC_PARTITIONS: "1"
      CONTROL_CENTER_METRICS_TOPIC_PARTITIONS: "1"
      PORT: "9021"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9021 >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s

  jobmanager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jobmanager
    networks:
      - flink-kafka-network
    command: jobmanager
    ports: ["8082:8081"]
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    depends_on:
      schema-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8081/overview | grep -q '\"flink-version\"'"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    networks:
      - flink-kafka-network
    ports: ["6333:6333"]
    volumes:
      - qdrant-data:/qdrant/storage
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:6333/health >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

  taskmanager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taskmanager
    networks:
      - flink-kafka-network
    command: taskmanager -Dtaskmanager.numberOfTaskSlots=3
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    depends_on:
      jobmanager:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://jobmanager:8081/taskmanagers | grep -q '\"id\"'"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 30s

  sql-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sql-gateway
    networks:
      - flink-kafka-network
    depends_on:
      taskmanager:
        condition: service_healthy
    # FIXED: Corrected the REST address configuration for JobManager connection
    command: >
      bash -c "/opt/flink/bin/sql-gateway.sh start-foreground
      -Dsql-gateway.endpoint.rest.address=0.0.0.0
      -Dsql-gateway.endpoint.rest.port=8083
      -Djobmanager.rpc.address=jobmanager
      -Drest.address=jobmanager
      -Drest.port=8081"
    ports: ["8083:8083"]
    environment:
      - FLINK_JOBMANAGER_RPC_ADDRESS=jobmanager
      - FLINK_PROPERTIES=jobmanager.rpc.address:jobmanager
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8083/v1/info | grep -q '\"productName\":\"Apache Flink\"'"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

networks:
  flink-kafka-network:
    driver: bridge

volumes:
  kafka-data:
  qdrant-data: